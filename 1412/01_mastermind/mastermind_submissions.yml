submissions:
  Andrew Overby:
    repository: https://github.com/Overby/mastermind_redux/commits?author=Overby
    notes: '(filled in by instructor)'
    evaluation:
      Fundamental Ruby & Style: 0
      Enumerable & Collections: 0
      Test-Driven Development: 0
      REPL Interface: 0
      Breaking Logic into Components: 0
  Austin Wood:
    repository: https://github.com/indiesquidge/mastermind.git
    notes: '(filled in by instructor)'
    evaluation:
      Fundamental Ruby & Style: 0
      Enumerable & Collections: 0
      Test-Driven Development: 0
      REPL Interface: 0
      Breaking Logic into Components: 0
  DJ Greenfield:
    repository: https://github.com/yourusername/yourproject
    notes: '(filled in by instructor)'
    evaluation:
      Fundamental Ruby & Style: 0
      Enumerable & Collections: 0
      Test-Driven Development: 0
      REPL Interface: 0
      Breaking Logic into Components: 0
  David E Maurer:
    repository: git@github.com:abstractrandom/mastermind.git
    notes: '(filled in by instructor)'
    evaluation:
      Fundamental Ruby & Style: 0
      Enumerable & Collections: 0
      Test-Driven Development: 0
      REPL Interface: 0
      Breaking Logic into Components: 0
  Edward McCarthy:
    repository: https://github.com/mcshakes/Mastermind-Take-2
    notes: '(filled in by instructor)'
    evaluation:
      Fundamental Ruby & Style: 0
      Enumerable & Collections: 0
      Test-Driven Development: 0
      REPL Interface: 0
      Breaking Logic into Components: 0
  Fred Block:
    repository: https://github.com/yourusername/yourproject
    notes: '(filled in by instructor)'
    evaluation:
      Fundamental Ruby & Style: 0
      Enumerable & Collections: 0
      Test-Driven Development: 0
      REPL Interface: 0
      Breaking Logic into Components: 0
  Jack Yeh:
    repository: https://github.com/yourusername/yourproject
    notes: '(filled in by instructor)'
    evaluation:
      Fundamental Ruby & Style: 0
      Enumerable & Collections: 0
      Test-Driven Development: 0
      REPL Interface: 0
      Breaking Logic into Components: 0
  Jeffrey Gu:
    repository: https://github.com/jgu2160/battleship
    notes: 'Make sure you are running all the tests frequently (RAKEFILE)
            Testing approach/coverage needs more work.
            Code is a bit tangled, but works.
            Focus on breaking logic out into smaller components.
            Need to look for opportunities to use enumeration/repetition,
            rather than repeating similar code.
            Game mechanics are there, flow needs a little work to be
            totally playable.'
    evaluation:
      Fundamental Ruby & Style: 2
      Enumerable & Collections: 2
      Test-Driven Development: 2
      REPL Interface: 2
      Breaking Logic into Components: 3
  Juan Manuel Navarro:
    repository: https://github.com/gomav/MasterMind.git
    notes: '(filled in by instructor)'
    evaluation:
      Fundamental Ruby & Style: 0
      Enumerable & Collections: 0
      Test-Driven Development: 0
      REPL Interface: 0
      Breaking Logic into Components: 0
  Kyle Henson:
    repository: https://github.com/kylehenson/mastermind
    notes: '(filled in by instructor)'
    evaluation:
      Fundamental Ruby & Style: 0
      Enumerable & Collections: 0
      Test-Driven Development: 0
      REPL Interface: 0
      Breaking Logic into Components: 0
  Kyra Weber:
    repository: https://github.com/kyraweber/mastermind
    notes: '(filled in by instructor)'
    evaluation:
      Fundamental Ruby & Style: 0
      Enumerable & Collections: 0
      Test-Driven Development: 0
      REPL Interface: 0
      Breaking Logic into Components: 0
  Lori Culberson:
    repository: https://github.com/loriculberson/mastermind_levels
    notes: '(filled in by instructor)'
    evaluation:
      Fundamental Ruby & Style: 0
      Enumerable & Collections: 0
      Test-Driven Development: 0
      REPL Interface: 0
      Breaking Logic into Components: 0
  Markus Olsen:
    repository: https://github.com/neslom/mastermind
    notes: '(filled in by instructor)'
    evaluation:
      Fundamental Ruby & Style: 0
      Enumerable & Collections: 0
      Test-Driven Development: 0
      REPL Interface: 0
      Breaking Logic into Components: 0
  Miriam Moser:
    repository: https://github.com/mirjoy/mastermind
    notes: '(filled in by instructor)'
    evaluation:
      Fundamental Ruby & Style: 0
      Enumerable & Collections: 0
      Test-Driven Development: 0
      REPL Interface: 0
      Breaking Logic into Components: 0
  Paul Grever:
    repository: https://github.com/yourusername/yourproject
    notes: '(filled in by instructor)'
    evaluation:
      Fundamental Ruby & Style: 0
      Enumerable & Collections: 0
      Test-Driven Development: 0
      REPL Interface: 0
      Breaking Logic into Components: 0
  Stanley Siudzinski:
    repository: https://github.com/SSgoldwater/mastermind
    notes: 'Pretty strong testing.
            Ruby style is good, love seeing small classes.
            Components are well broken down and individually tested.
            Feedback implementation isn\'t quite right.'
    evaluation:
      Fundamental Ruby & Style: 3
      Enumerable & Collections: 3
      Test-Driven Development: 3
      REPL Interface: 2
      Breaking Logic into Components: 4
  Teresa Finn:
    repository: https://github.com/teresafinn/mastermind
    notes: '(filled in by instructor)'
    evaluation:
      Fundamental Ruby & Style: 0
      Enumerable & Collections: 0
      Test-Driven Development: 0
      REPL Interface: 0
      Breaking Logic into Components: 0
  Tino Espinoza:
    repository: https://github.com/xvalentino/mastermind
    notes: '(filled in by instructor)'
    evaluation:
      Fundamental Ruby & Style: 0
      Enumerable & Collections: 0
      Test-Driven Development: 0
      REPL Interface: 0
      Breaking Logic into Components: 0
  Trey Tomlinson:
    repository: https://github.com/treyyyy/mastermind
    notes: '(filled in by instructor)'
    evaluation:
      Fundamental Ruby & Style: 0
      Enumerable & Collections: 0
      Test-Driven Development: 0
      REPL Interface: 0
      Breaking Logic into Components: 0
