submissions:
  Alex Jensen:
    repository: https://github.com/danajensen/mastermind
    notes: ""
    evaluation:
      Fundamental Ruby & Style: 0
      Enumerable & Collections: 0
      Test-Driven Development: 0
      REPL Interface: 0
      Breaking Logic into Components: 0
  Herbert Joseph:
    repository: https://github.com/Copywright/mastermind
    notes: "Don't kill me..."
    evaluation:
      Fundamental Ruby & Style: 0
      Enumerable & Collections: 0
      Test-Driven Development: 0
      REPL Interface: 0
      Breaking Logic into Components: 0
  Sam Kuhlmann:
    repository: https://github.com/skuhlmann/turing_mastermind
    notes: ""
    evaluation:
      Fundamental Ruby & Style: 0
      Enumerable & Collections: 0
      Test-Driven Development: 0
      REPL Interface: 0
      Breaking Logic into Components: 0
  Gregory Narajka:
    repository:
    notes: ""
    evaluation:
      Fundamental Ruby & Style: 0
      Enumerable & Collections: 0
      Test-Driven Development: 0
      REPL Interface: 0
      Breaking Logic into Components: 0
  Kate Lane:
    repository:
    notes: ""
    evaluation:
      Fundamental Ruby & Style: 0
      Enumerable & Collections: 0
      Test-Driven Development: 0
      REPL Interface: 0
      Breaking Logic into Components: 0
  Timothy Mee:
    repository: https://github.com/Tmee/MASTERMIND/tree/take_2
    notes: "and that's that."
    evaluation:
      Fundamental Ruby & Style: 0
      Enumerable & Collections: 0
      Test-Driven Development: 0
      REPL Interface: 0
      Breaking Logic into Components: 0
  Konr Larson:
    repository: https://github.com/larsonkonr/mastermind.git
    notes: "Game plays well. Good use of colors. Needs tests!!! Some weak spots
            in enumerable usage and if/else vs unless vs case."
    evaluation:
      Fundamental Ruby & Style: 2
      Enumerable & Collections: 2
      Test-Driven Development: 1
      REPL Interface: 4
      Breaking Logic into Components: 3
  Zachary Routhier:
    repository: https://github.com/zRouth/Mastermind.git
    notes: "Game plays well. Separate files out to subfolders (lib, test). Nine
            tests total, they pass. Get rid of dead code/files."
    evaluation:
      Fundamental Ruby & Style: 3
      Enumerable & Collections: 3
      Test-Driven Development: 1
      REPL Interface: 3
      Breaking Logic into Components: 3
  David Bayendor:
    repository: git@github.com:bayendor/mastermind.git
    notes: "Game plays well. Decent job of testing (w/ 17 tests). Many good
            unit tests, need some tests at a higher level that imitate the user.
            Ruby uses small methods, simple code, solid Ruby API. Pull some
            responsibilities like sequence generation out into their own classes."
    evaluation:
      Fundamental Ruby & Style: 3
      Enumerable & Collections: 3
      Test-Driven Development: 2
      REPL Interface: 3
      Breaking Logic into Components: 2
  Adam Smith:
    repository:
    notes: ""
    evaluation:
      Fundamental Ruby & Style: 0
      Enumerable & Collections: 0
      Test-Driven Development: 0
      REPL Interface: 0
      Breaking Logic into Components: 0
  Christopher Bynum:
    repository:
    notes: ""
    evaluation:
      Fundamental Ruby & Style: 0
      Enumerable & Collections: 0
      Test-Driven Development: 0
      REPL Interface: 0
      Breaking Logic into Components: 0
  Chase van Hekken:
    repository: https://github.com/ChasevanHekken/mastermind-game.git
    notes: ""
    evaluation:
      Fundamental Ruby & Style: 0
      Enumerable & Collections: 0
      Test-Driven Development: 0
      REPL Interface: 0
      Breaking Logic into Components: 0
  Victoria Harrod:
    repository:
    notes: ""
    evaluation:
      Fundamental Ruby & Style: 0
      Enumerable & Collections: 0
      Test-Driven Development: 0
      REPL Interface: 0
      Breaking Logic into Components: 0
  Kalah Cheek:
    repository: https://github.com/kcheek/mastermind.git
    notes: ""
    evaluation:
      Fundamental Ruby & Style: 0
      Enumerable & Collections: 0
      Test-Driven Development: 0
      REPL Interface: 0
      Breaking Logic into Components: 0
  Travis Yoder:
    repository:
    notes: ""
    evaluation:
      Fundamental Ruby & Style: 0
      Enumerable & Collections: 0
      Test-Driven Development: 0
      REPL Interface: 0
      Breaking Logic into Components: 0
  Danny Glunz:
    repository:
    notes: ""
    evaluation:
      Fundamental Ruby & Style: 0
      Enumerable & Collections: 0
      Test-Driven Development: 0
      REPL Interface: 0
      Breaking Logic into Components: 0
  Chandra Carney:
    repository:
    notes: ""
    evaluation:
      Fundamental Ruby & Style: 0
      Enumerable & Collections: 0
      Test-Driven Development: 0
      REPL Interface: 0
      Breaking Logic into Components: 0
