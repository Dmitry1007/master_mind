submissions:
  Alex Jensen:
    repository: https://github.com/danajensen/mastermind
    notes: "Shows strong effort toward organization. Some closely-coupled objects.
            Good use of best-choice enumerables (collect, any? zip).
            Well-tested in isolation and integration.
            Integrated difficulty level in REPL. Clear to use.
            Saw intent to break apart logical components, but some objects tied together that will make future iterations or changes difficult to implement."
    evaluation:
      Fundamental Ruby & Style: 3.5
      Enumerable & Collections: 4
      Test-Driven Development: 4
      REPL Interface: 3.5
      Breaking Logic into Components: 3
  Herbert Joseph:
    repository: https://github.com/Copywright/mastermind
    notes: "Don't kill me..."
    evaluation:
      Fundamental Ruby & Style: 0
      Enumerable & Collections: 0
      Test-Driven Development: 0
      REPL Interface: 0
      Breaking Logic into Components: 0
  Sam Kuhlmann:
    repository: https://github.com/skuhlmann/turing_mastermind
    notes: ""
    evaluation:
      Fundamental Ruby & Style: 0
      Enumerable & Collections: 0
      Test-Driven Development: 0
      REPL Interface: 0
      Breaking Logic into Components: 0
  Gregory Narajka:
    repository:
    notes: ""
    evaluation:
      Fundamental Ruby & Style: 0
      Enumerable & Collections: 0
      Test-Driven Development: 0
      REPL Interface: 0
      Breaking Logic into Components: 0
  Kate Lane:
    repository:
    notes: ""
    evaluation:
      Fundamental Ruby & Style: 0
      Enumerable & Collections: 0
      Test-Driven Development: 0
      REPL Interface: 0
      Breaking Logic into Components: 0
  Timothy Mee:
    repository: https://github.com/Tmee/MASTERMIND/tree/take_2
    notes: "and that's that."
    evaluation:
      Fundamental Ruby & Style: 0
      Enumerable & Collections: 0
      Test-Driven Development: 0
      REPL Interface: 0
      Breaking Logic into Components: 0
  Konr Larson:
    repository: https://github.com/larsonkonr/mastermind.git
    notes: ""
    evaluation:
      Fundamental Ruby & Style: 0
      Enumerable & Collections: 0
      Test-Driven Development: 0
      REPL Interface: 0
      Breaking Logic into Components: 0
  Zachary Routhier:
    repository: https://github.com/zRouth/Mastermind.git
    notes: ""
    evaluation:
      Fundamental Ruby & Style: 0
      Enumerable & Collections: 0
      Test-Driven Development: 0
      REPL Interface: 0
      Breaking Logic into Components: 0
  David Bayendor:
    repository: git@github.com:bayendor/mastermind.git
    notes: ""
    evaluation:
      Fundamental Ruby & Style: 0
      Enumerable & Collections: 0
      Test-Driven Development: 0
      REPL Interface: 0
      Breaking Logic into Components: 0
  Adam Smith:
    repository:
    notes: ""
    evaluation:
      Fundamental Ruby & Style: 0
      Enumerable & Collections: 0
      Test-Driven Development: 0
      REPL Interface: 0
      Breaking Logic into Components: 0
  Christopher Bynum:
    repository:
    notes: ""
    evaluation:
      Fundamental Ruby & Style: 0
      Enumerable & Collections: 0
      Test-Driven Development: 0
      REPL Interface: 0
      Breaking Logic into Components: 0
  Chase van Hekken:
    repository: https://github.com/ChasevanHekken/mastermind-game.git
    notes: "Definitely shows a growing grasp of OO concepts and idiomatic Ruby.
            had some long and methods that did multiple things.
            Also had a few classes that had to reach a bit too deeply to keep the game logic together."
    evaluation:
      Fundamental Ruby & Style: 2.5
      Enumerable & Collections: 2.5
      Test-Driven Development: 2.5
      REPL Interface: 3
      Breaking Logic into Components: 2.5
  Victoria Harrod:
    repository: https://github.com/VikiAnn/mastermind
    notes: "Had some components that were well thought out.
            Some of the tests were superficial.
            Developing a good grasp of OO concepts."
    evaluation:
      Fundamental Ruby & Style: 2.5
      Enumerable & Collections: 3
      Test-Driven Development: 2.5
      REPL Interface: 3
      Breaking Logic into Components: 2.5
  Kalah Cheek:
    repository: https://github.com/kcheek/mastermind.git
    notes: "Was able to defend design decisions.
            Limited test coverage."
    evaluation:
      Fundamental Ruby & Style: 2.5
      Enumerable & Collections: 3
      Test-Driven Development: 2
      REPL Interface: 3
      Breaking Logic into Components: 3
  Travis Yoder:
    repository: "https://github.com/trayo/mastermind.git"
    notes: "Some incomplete tests.
            Several good attempts at trying to split up logical components into
            individual classes."
    evaluation:
      Fundamental Ruby & Style: 3
      Enumerable & Collections: 3
      Test-Driven Development: 2
      REPL Interface: 3
      Breaking Logic into Components: 3
  Danny Glunz:
    repository:
    notes: "Completed both Mastermind and Battleship.
            Lacking sufficient test coverage."
    evaluation:
      Fundamental Ruby & Style: 4
      Enumerable & Collections: 4
      Test-Driven Development: 2
      REPL Interface: 4
      Breaking Logic into Components: 3.5
  Chandra Carney:
    repository:
    notes: "Lacking test coverage.
            Good use of enumerable and Ruby style."
    evaluation:
      Fundamental Ruby & Style: 3
      Enumerable & Collections: 3
      Test-Driven Development: 2
      REPL Interface: 3
      Breaking Logic into Components: 2.5
