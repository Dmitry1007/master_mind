submissions:
  Jonmichael Chambers & Eric Fransen:
    repository: https://github.com/tyrbo/sales_engine
    setup_notes: ""
    instructor_evaluation:
      notes: ""
      rubric:
        Functional Expectations: 0
        Test-Driven Development: 0
        Encapsulation / Components: 0
        Fundamental Ruby & Style: 0
        Enumerable & Collections: 0
        Code Sanitation: 0
    peer_evaluation:
      notes: ""
      rubric:
        Functional Expectations: 0
        Test-Driven Development: 0
        Encapsulation / Components: 0
        Fundamental Ruby & Style: 0
        Enumerable & Collections: 0
        Code Sanitation: 0
  Allison Larson & Horacio Chavez:
    repository: https://github.com/H6C5/sales_engine
    setup_notes: ""
    instructor_evaluation:
      notes: ""
      rubric:
        Functional Expectations: 0
        Test-Driven Development: 0
        Encapsulation / Components: 0
        Fundamental Ruby & Style: 0
        Enumerable & Collections: 0
        Code Sanitation: 0
    peer_evaluation:
      notes: ""
      rubric:
        Functional Expectations: 0
        Test-Driven Development: 0
        Encapsulation / Components: 0
        Fundamental Ruby & Style: 0
        Enumerable & Collections: 0
        Code Sanitation: 0
  Corey Davis & Marc Garreau:
    repository: git@github.com:MarcGarreau/sales_engine.git
    setup_notes: "Completed 3/4 customer extensions"
    instructor_evaluation:
      notes: ""
      rubric:
        Functional Expectations: 0
        Test-Driven Development: 0
        Encapsulation / Components: 0
        Fundamental Ruby & Style: 0
        Enumerable & Collections: 0
        Code Sanitation: 0
    peer_evaluation:
      notes: "Code was very clean, missing all tests on Business Intelligence. Minitest also taking a very long time to load, from
      using full CSV. Not much actual refactoring needed. "
      rubric:
        Functional Expectations: 4
        Test-Driven Development: 2
        Encapsulation / Components: 3.5
        Fundamental Ruby & Style: 4
        Enumerable & Collections: 4
        Code Sanitation: 4
  Robert Gu & Jessica Goulding:
    repository: https://github.com/JessicaG/sales_engine
    setup_notes: "did customer extension for most revenue and most items, did not complete invoices."
    instructor_evaluation:
      notes: "Good execution of implementation and tests, missing adding invoices, shows growing comfort with Ruby + processes."
      rubric:
        Functional Expectations: 2
        Test-Driven Development: 3
        Encapsulation / Components: 3
        Fundamental Ruby & Style: 3
        Enumerable & Collections: 3
        Code Sanitation: 4
    peer_evaluation:
      notes: ""
      rubric:
        Functional Expectations: 0
        Test-Driven Development: 0
        Encapsulation / Components: 0
        Fundamental Ruby & Style: 0
        Enumerable & Collections: 0
        Code Sanitation: 0
  Chad Brading & Gustavo Villagrana & Hilary Denton:
    repository: git@github.com:Hilaryous/sales_engine.git
    setup_notes: ""
    instructor_evaluation:
      notes: ""
      rubric:
        Functional Expectations: 0
        Test-Driven Development: 0
        Encapsulation / Components: 0
        Fundamental Ruby & Style: 0
        Enumerable & Collections: 0
        Code Sanitation: 0
    peer_evaluation:
      notes: ""
      rubric:
        Functional Expectations: 3
        Test-Driven Development: 3
        Encapsulation / Components: 3.5
        Fundamental Ruby & Style: 2.5
        Enumerable & Collections: 3
        Code Sanitation: 4
  Alan Smith & Watts Watkins:
    repository: https://github.com/121watts/sales_engine.git
    setup_notes: ""
    instructor_evaluation:
      notes: "Well built and designed code, just needs the rest of the features"
      rubric:
        Functional Expectations: 2
        Test-Driven Development: 4
        Encapsulation / Components: 4
        Fundamental Ruby & Style: 3
        Enumerable & Collections: 3
        Code Sanitation: 3
    peer_evaluation:
      notes: ""
      rubric:
        Functional Expectations: 0
        Test-Driven Development: 0
        Encapsulation / Components: 0
        Fundamental Ruby & Style: 0
        Enumerable & Collections: 0
        Code Sanitation: 0
  Emily Davis & Cara Dennis:
    repository: git@github.com:emilyadavis303/sales_engine_davis_dennis.git
    setup_notes: ""
    instructor_evaluation:
      notes: "Missing some features, but did a good job executing tests and implementation."
      rubric:
        Functional Expectations: 2
        Test-Driven Development: 3
        Encapsulation / Components: 3
        Fundamental Ruby & Style: 3
        Enumerable & Collections: 3
        Code Sanitation: 4
    peer_evaluation:
      notes: "Some business logic was missing.
              Significant number of law of demeter violations.
              Room for some refactoring. Some unnecessary variables."
      rubric:
        Functional Expectations: 2
        Test-Driven Development: 3
        Encapsulation / Components: 3
        Fundamental Ruby & Style: 2.5
        Enumerable & Collections: 3
        Code Sanitation: 4
  Tim Proctor & Tan Doan:
    repository: https://github.com/tdoan87/sales_engine.git
    setup_notes: ""
    instructor_evaluation:
      notes: ""
      rubric:
        Functional Expectations: 0
        Test-Driven Development: 0
        Encapsulation / Components: 0
        Fundamental Ruby & Style: 0
        Enumerable & Collections: 0
        Code Sanitation: 0
    peer_evaluation:
      notes: ""
      rubric:
        Functional Expectations: 0
        Test-Driven Development: 0
        Encapsulation / Components: 0
        Fundamental Ruby & Style: 0
        Enumerable & Collections: 0
        Code Sanitation: 0
  Will Faurot & Andy Mention:
    repository: https://github.com/wfro/sales_engine
    setup_notes: "We did a few extensions. Details are in README"
    instructor_evaluation:
      notes: ""
      rubric:
        Functional Expectations: 0
        Test-Driven Development: 0
        Encapsulation / Components: 0
        Fundamental Ruby & Style: 0
        Enumerable & Collections: 0
        Code Sanitation: 0
    peer_evaluation:
      notes: "Great understanding of enumerables, TDD and breaking things into smaller pieces.  Breaks LOD."
      rubric:
        Functional Expectations: 3.5
        Test-Driven Development: 4
        Encapsulation / Components: 3
        Fundamental Ruby & Style: 3.5
        Enumerable & Collections: 4
        Code Sanitation: 4
