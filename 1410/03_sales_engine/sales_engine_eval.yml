submissions:
  Bhargavi Satpathy & Lori Culberson:
    repository: 
    evaluation:
      notes: ""
      Functional Expectations: 
      Test-Driven Development:
      Encapsulation / Breaking Logic into Components:
      Fundamental Ruby & Style:
      Enumerable & Collections:
      Code Sanitation:
  Alexandra Robinson & Laura Whalin & Orion Osborn:
    repository: 
    evaluation:
      notes: ""
      Functional Expectations: 
      Test-Driven Development:
      Encapsulation / Breaking Logic into Components:
      Fundamental Ruby & Style:
      Enumerable & Collections:
      Code Sanitation:
  Kit Pearson & Andrew Overby:
    repository: 
    evaluation:
      notes: ""
      Functional Expectations: 
      Test-Driven Development:
      Encapsulation / Breaking Logic into Components:
      Fundamental Ruby & Style:
      Enumerable & Collections:
      Code Sanitation:
  Brandon Mrsny & Chris Luhring:
    repository: https://github.com/bmrsny/sales_engine
    evaluation:
      notes: "TDD is strong, but some functionality is missing. Check naming of variables in sales engine test.
              Well-factored code. Some repetition in terms of functionality, but clean.
              No business intelligence implemented."
      Functional Expectations: 2
      Test-Driven Development: 3
      Encapsulation / Breaking Logic into Components: 3
      Fundamental Ruby & Style: 3
      Enumerable & Collections:3
      Code Sanitation: 2.5
  Nathan Owsiany & Scott Crawford:
    repository: https://github.com/ndwhtlssthr/sales_engine
    evaluation:
      notes: "Very well-factored code.
              Implemented all base expectations and two extensions. 
              One hundred percent test coverage.
              Good use of enumerables.
              Used modules to encapsulate reused code.
              Used inheritance to encapsulate reused code."
      Functional Expectations: 4
      Test-Driven Development: 4
      Encapsulation / Breaking Logic into Components: 3.5
      Fundamental Ruby & Style: 4
      Enumerable & Collections: 4
      Code Sanitation: 4
  Jeffrey Wan & Krista A Nelson:
    repository: 
    evaluation:
      notes: ""
      Functional Expectations: 
      Test-Driven Development:
      Encapsulation / Breaking Logic into Components:
      Fundamental Ruby & Style:
      Enumerable & Collections:
      Code Sanitation:
  Juan Manuel Navarro & Emily Berkeley:
    repository: https://github.com/gomav/sales_engine
    evaluation:
      notes: ""
      Functional Expectations: 
      Test-Driven Development:
      Encapsulation / Breaking Logic into Components:
      Fundamental Ruby & Style:
      Enumerable & Collections:
      Code Sanitation:
  Rich Shea & Michael Dao:
    repository: 
    evaluation:
      notes: "Well-factored code.
              Passes all tests without crashes.
              Solid TDD and use of appropriate data.
              Good understanding of enumerables, but possibly shorter ways to get from one collection to another.
              Check naming of variables -- some are unclear."
      Functional Expectations: 3
      Test-Driven Development: 4
      Encapsulation / Breaking Logic into Components: 3.5
      Fundamental Ruby & Style: 3
      Enumerable & Collections: 3
      Code Sanitation: 4
  Lydia Shafer & Bryce Holcomb:
    repository: https://github.com/bryceholcomb/sales_engine
    evaluation:
      notes: ""
      Functional Expectations: 
      Test-Driven Development:
      Encapsulation / Breaking Logic into Components:
      Fundamental Ruby & Style:
      Enumerable & Collections:
      Code Sanitation:
  Edward McCarthy & Dustin Gault: https://github.com/DSynergy/sales_engine/tree/dustin2.0
    repository: 
    evaluation:
      notes: ""
      Functional Expectations: 
      Test-Driven Development:
      Encapsulation / Breaking Logic into Components:
      Fundamental Ruby & Style:
      Enumerable & Collections:
      Code Sanitation:
